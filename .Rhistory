x = NULL,
title = "Média dos saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
tema() + theme(legend.position = "none")
ggplot(sumario_dados, aes(y = media, x = siglaOrgao)) +
geom_bar(stat = "identity", fill = "goldenrod", color = "white") +
geom_text(aes(y = media + 1000, label = paste(format(round(media/1000000,0),
big.mark = ".", decimal.mark = ","), "mi")),
color = "grey50", size = 2,
hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
tema() + theme(legend.position = "none")
ggplot(sumario_dados, aes(y = media, x = siglaOrgao)) +
geom_bar(stat = "identity", fill = "goldenrod", color = "white") +
geom_text(aes(y = media + 1000, label = paste(format(round(media/1000000,0),
big.mark = ".", decimal.mark = ","), "mi")),
color = "grey50", size = 2,
hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(sumarios_dados$media * 1.1)) +
tema() + theme(legend.position = "none")
ggplot(sumario_dados, aes(y = media, x = siglaOrgao)) +
geom_bar(stat = "identity", fill = "goldenrod", color = "white") +
geom_text(aes(y = media + 1000, label = paste(format(round(media/1000000,0),
big.mark = ".", decimal.mark = ","), "mi")),
color = "grey50", size = 2,
hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(sumario_dados$media * 1.1)) +
tema() + theme(legend.position = "none")
ggplot(sumario_dados, aes(y = media, x = siglaOrgao)) +
geom_bar(stat = "identity", fill = "goldenrod", color = "white") +
geom_text(aes(y = media + 1500, label = paste(format(round(media/1000000,0),
big.mark = ".", decimal.mark = ","), "mi")),
color = "grey50", size = 2,
hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(sumario_dados$media * 1.1)) +
tema() + theme(legend.position = "none")
ggplot(sumario_dados, aes(y = media, x = siglaOrgao)) +
geom_bar(stat = "identity", fill = "goldenrod", color = "white") +
geom_text(aes(y = media + 1500, label = paste(format(round(media/1000000,0),
big.mark = ".", decimal.mark = ","), "mi")),
color = "grey50", size = 2,
hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos financeiros diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(sumario_dados$media * 1.1)) +
tema() + theme(legend.position = "none")
ggplot(sumario_dados, aes(y = media, x = siglaOrgao)) +
geom_bar(stat = "identity", fill = "goldenrod", color = "white") +
geom_text(aes(y = media + 1500, label = paste(format(round(media/1000000,0),
big.mark = ".", decimal.mark = ","), "mi")),
color = "grey50", size = 2,
hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos financeiros diários - Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(sumario_dados$media * 1.1)) +
tema() + theme(legend.position = "none")
ggplot(sumario_dados, aes(y = media, x = siglaOrgao)) +
geom_bar(stat = "identity", fill = "goldenrod", color = "white") +
geom_text(aes(y = media + 2000, label = paste(format(round(media/1000000,0),
big.mark = ".", decimal.mark = ","), "mi")),
color = "grey50", size = 2.5,
hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos financeiros diários - Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(sumario_dados$media * 1.1)) +
tema() + theme(legend.position = "none")
graf_estatico <- ggplot(dados, aes(y = Saldo, x = siglaOrgao)) +
geom_tile(aes(y = round(Saldo,0)), fill = "darkgoldenrod", alpha = 0.1, width = 1, height = 0.01) +
coord_flip() +
geom_hline(yintercept = min(dados$Saldo), linetype = "dotted") +
geom_hline(yintercept = median(dados$Saldo), linetype = "dotted") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = min(dados$Saldo),
label = paste("Mínimo geral: ",
format(round(min(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = median(dados$Saldo),
label = paste("Mediana geral: ",
format(round(median(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
scale_y_log10(labels = function(x) {format(x, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em R$ (escala logarítmica)",
x = NULL,
title = "Saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(dados$Saldo) * 2) +
tema() + theme(legend.position = "none")
graf_estatico
dados <- dados %>%
left_join(sumario_dados[c("codOrgao", "siglaOrgao", "Orgao")])
graf_estatico <- ggplot(dados, aes(y = Saldo, x = siglaOrgao)) +
geom_tile(aes(y = round(Saldo,0)), fill = "darkgoldenrod", alpha = 0.1, width = 1, height = 0.01) +
coord_flip() +
geom_hline(yintercept = min(dados$Saldo), linetype = "dotted") +
geom_hline(yintercept = median(dados$Saldo), linetype = "dotted") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = min(dados$Saldo),
label = paste("Mínimo geral: ",
format(round(min(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = median(dados$Saldo),
label = paste("Mediana geral: ",
format(round(median(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
scale_y_log10(labels = function(x) {format(x, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em R$ (escala logarítmica)",
x = NULL,
title = "Saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(dados$Saldo) * 2) +
tema() + theme(legend.position = "none")
graf_estatico
graf_estatico +
geom_tile(aes(y = ifelse(Date>data_min,minimo,NA)), fill = "firebrick", alpha = 0.4, width = 1, height = 0.03) +
geom_tile(aes(y = ifelse(Date>data_max,maximo,NA)), fill = "navy", alpha = 0.4, width = 1, height = 0.03) +
geom_text(aes(y = ifelse(Date>data_min,minimo * 0.95,NA),
label = paste(format(round(minimo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 1,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "firebrick"
) +
geom_text(aes(y = ifelse(Date>data_max,maximo * 1.05,NA),
label = paste(format(round(maximo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 0,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "navy"
) +
labs(subtitle = "Posição em {frame_time}") +
tema() + theme(legend.position = "none") +
transition_time(Date) +
ease_aes('linear')
dados <- dados %>%
left_join(sumario_dados)
graf_estatico <- ggplot(dados, aes(y = Saldo, x = siglaOrgao)) +
geom_tile(aes(y = round(Saldo,0)), fill = "darkgoldenrod", alpha = 0.1, width = 1, height = 0.01) +
coord_flip() +
geom_hline(yintercept = min(dados$Saldo), linetype = "dotted") +
geom_hline(yintercept = median(dados$Saldo), linetype = "dotted") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = min(dados$Saldo),
label = paste("Mínimo geral: ",
format(round(min(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = median(dados$Saldo),
label = paste("Mediana geral: ",
format(round(median(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
scale_y_log10(labels = function(x) {format(x, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em R$ (escala logarítmica)",
x = NULL,
title = "Saldos diários dos órgãos do Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(dados$Saldo) * 2) +
tema() + theme(legend.position = "none")
graf_estatico
graf_estatico +
geom_tile(aes(y = ifelse(Date>data_min,minimo,NA)), fill = "firebrick", alpha = 0.4, width = 1, height = 0.03) +
geom_tile(aes(y = ifelse(Date>data_max,maximo,NA)), fill = "navy", alpha = 0.4, width = 1, height = 0.03) +
geom_text(aes(y = ifelse(Date>data_min,minimo * 0.95,NA),
label = paste(format(round(minimo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 1,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "firebrick"
) +
geom_text(aes(y = ifelse(Date>data_max,maximo * 1.05,NA),
label = paste(format(round(maximo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 0,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "navy"
) +
labs(subtitle = "Posição em {frame_time}") +
tema() + theme(legend.position = "none") +
transition_time(Date) +
ease_aes('linear')
graf_estatico <- ggplot(dados, aes(y = Saldo, x = siglaOrgao)) +
geom_tile(aes(y = round(Saldo,0)), fill = "darkgoldenrod", alpha = 0.1, width = 1, height = 0.01) +
coord_flip() +
geom_hline(yintercept = min(dados$Saldo), linetype = "dotted") +
geom_hline(yintercept = median(dados$Saldo), linetype = "dotted") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = min(dados$Saldo),
label = paste("Mínimo geral: ",
format(round(min(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = median(dados$Saldo),
label = paste("Mediana geral: ",
format(round(median(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
scale_y_log10(labels = function(x) {format(x, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em R$ (escala logarítmica)",
x = NULL,
title = "Saldos financeiros diários - Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(dados$Saldo) * 2) +
tema() + theme(legend.position = "none")
graf_estatico
graf_estatico +
geom_tile(aes(y = ifelse(Date>data_min,minimo,NA)), fill = "firebrick", alpha = 0.4, width = 1, height = 0.03) +
geom_tile(aes(y = ifelse(Date>data_max,maximo,NA)), fill = "navy", alpha = 0.4, width = 1, height = 0.03) +
geom_text(aes(y = ifelse(Date>data_min,minimo * 0.95,NA),
label = paste(format(round(minimo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 1,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "firebrick"
) +
geom_text(aes(y = ifelse(Date>data_max,maximo * 1.05,NA),
label = paste(format(round(maximo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 0,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "navy"
) +
labs(subtitle = "Posição em {frame_time}") +
tema() + theme(legend.position = "none") +
transition_time(Date) +
ease_aes('linear')
graf_estatico + geom_boxplot()
setwd("C:/Users/tiago.pereira/GitHub/puddles-puddles")
dados_fluxo_Siafi <- read.csv2('data/Org24000_limite_documento.csv')
colnames(dados_fluxo_Siafi) <- c(
"codOrgao",
"nomeOrgao",
"Data",
"Documento",
"docObservacao",
"Item",
"Movimento")
dados_fluxo_Siafi %>%
mutate(tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = Movimento)
dados_fluxo_Siafi %>%
mutate(tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento))
View(dados_fluxo_Siafi)
as.character(dados_fluxo_Siafi$Movimento[1])
as.numeric(as.character(dados_fluxo_Siafi$Movimento[1]))
dados_fluxo_Siafi <- read_excel('data/MCTI_limSqDiarioDoc.xlsx')
colnames(dados_fluxo_Siafi) <- c(
"codOrgao",
"nomeOrgao",
"Data",
"Documento",
"docObservacao",
"Item",
"Movimento")
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento),
contagem = n(.))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento)) %>%
tally()
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento),
qde = n(Documento))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Mov = sum(Movimento),
qde = n())
library(scales)
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = format(sum(Movimento),big.mark = ".", decimal.mark = ","),
Quantidade = n())
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = sum(Movimento),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=","))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = sum(Movimento),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=",")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = format(sum(Movimento)),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=",")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = format(sum(Movimento),big.mark=".", decimal.mark=","),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=",")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
tab_class_movimentos <- data.frame(
"classMovimento" = c("Recebimentos",
"Receitas",
"Anulações despesas",
"Ajustes contábeis",
"Ajustes contábeis",
"Despesas",
"Ajustes receitas",
"Liberações de recursos"),
"tipoDoc"        = c("PF",
"RA",
"Docs pagamentos",
"NS",
"NS",
"Docs pagamentos",
"RA",
"PF"),
"tipoMov"        = c("Positivo",
"Positivo",
"Positivo",
"Positivo",
"Negativo",
"Negativo",
"Negativo",
"Negativo"))
View(cbreaks)
View(tab_class_movimentos)
dados_fluxo <- dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc_ = str_sub(Documento, 16, 17),
tipoDoc  = ifelse(tipoDoc_ %in% docsPgtos, "Docs pagamentos", tipoDoc_),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo"),
Date = if_else(str_sub(Data, 1, 4) == "000/",
"Saldo inicial",
dmy(Data))) %>%
complete(Date = seq(min(dados$Date), max(dados$Date), by = "days")) %>%
replace(is.na(.), 0)
docsPgtos <- c("DF","DR","GF","GP","GR","OB")
dados_fluxo <- dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc_ = str_sub(Documento, 16, 17),
tipoDoc  = ifelse(tipoDoc_ %in% docsPgtos, "Docs pagamentos", tipoDoc_),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo"),
Date = if_else(str_sub(Data, 1, 4) == "000/",
"Saldo inicial",
dmy(Data))) %>%
complete(Date = seq(min(dados$Date), max(dados$Date), by = "days")) %>%
replace(is.na(.), 0)
dados_fluxo <- dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc_ = str_sub(Documento, 16, 17),
tipoDoc  = ifelse(tipoDoc_ %in% docsPgtos, "Docs pagamentos", tipoDoc_),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo"),
Date = if_else(str_sub(Data, 1, 4) == "000/",
"Saldo inicial",
dmy(Data)))
dados_fluxo <- dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc_ = str_sub(Documento, 16, 17),
tipoDoc  = ifelse(tipoDoc_ %in% docsPgtos, "Docs pagamentos", as.character(tipoDoc_)),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo"),
Date = if_else(str_sub(Data, 1, 4) == "000/",
"Saldo inicial",
dmy(Data)))
dados_fluxo <- dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc_ = str_sub(Documento, 16, 17),
tipoDoc  = if_else(tipoDoc_ %in% docsPgtos, "Docs pagamentos", tipoDoc_),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo"),
Date = if_else(str_sub(Data, 1, 4) == "000/",
"Saldo inicial",
dmy(Data)))
dados_fluxo <- dados_fluxo_Siafi %>%
filter(str_sub(Data, 1, 4) != "000/") %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc_ = str_sub(Documento, 16, 17),
tipoDoc  = if_else(tipoDoc_ %in% docsPgtos, "Docs pagamentos", tipoDoc_),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo"),
Date = dmy(Data)) %>%
complete(Date = seq(min(dados$Date), max(dados$Date), by = "days")) %>%
replace(is.na(.), 0)
View(dados_fluxo)
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = str_sub(Documento, 16, 17),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = format(sum(Movimento),big.mark=".", decimal.mark=","),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=",")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = ifelse(str_sub(Documento, 1, 13) == "SALDO INICIAL",
"Saldo de abertura",
str_sub(Documento, 16, 17)),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = format(sum(Movimento),big.mark=".", decimal.mark=","),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=",")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
